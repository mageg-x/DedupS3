// 英文翻译
const en = {
  // 公共部分
  common: {
    home: "Home",
    buckets: "Buckets",
    name: "Name",
    type: "Type",
    size: "Size",
    modifiedDate: "Modified Date",
    folder: "Folder",
    download: "Download",
    preview: "Preview",
    delete: "Delete",
    createdAt: "Created At",
    lastModified: "Last Modified",
    tags: "Tags",
    logout: "Logout",
    notifications: "Notifications",
    admin: "Admin",
    regularUser: "Regular User",
    export: "Export",
    details: "Details",
    report: "Report",
    success: "Success",
    failed: "Failed",
    failure: "Failure",
    system: "System",
    operation: "Actions",
    edit: "Edit",
    save: "Save",
    create: "Create",
    cancel: "Cancel",
    close: "Close",
    confirmDelete: "Confirm Delete",
    totalRecords: "Total {total} records ({size} per page)",
    status: "Status",
    selectStartTime: "Select start time",
    selectEndTime: "Select end time",
    networkErrorPleaseRetry: "Network error, please try again later",
    loading: "Loading...",
    error: "Error",
    noPermission: "You do not have permission to access this feature",
    fetchUserInfoFailed: "Failed to fetch user information"
  },

  // 菜单
  mainMenu: {
    dashboard: "Dashboard",
    buckets: "Buckets",
    accessKey: "Access Key",
    iam: "IAM",
    user: "User",
    group: "Group",
    role: "Role",
    advancedFeatures: "Advanced Features",
    migration: "Migration",
    defragment: "Defragment",
    snapshot: "SnapShot",
    analysis: "Analysis",
    debugTool: "Debug Tool",
    policy: "Policy",
    event: "Event",
    audit: "Audit",
    configuration: "Configuration",
    endpoint: "Endpoint",
    quota: "Quota",
    chunk: "Chunk",
  },

  // 登录页面
  login: {
    title: "Secure Connection",
    subtitle: "Select login method to continue",
    brandName: "Boulder (S3 Compatible Storage)",
    tagline: "Advanced Cloud Storage Management Platform",
    subtitleDescription:
      "Securely access and manage your S3 compatible storage through our intuitive browser interface. Combining enterprise-grade security with user-friendly design.",
    feature1Title: "Compatibility",
    feature1Description:
      "Fully compatible with AWS interface specifications, perfectly adapted to various SDKs and client tools, seamless migration at zero cost.",
    feature2Title: "Saving",
    feature2Description:
      "Adopting intelligent reuse of duplicate content and fast compression algorithms, significantly saving storage space, especially suitable for storing backup data, docker image files and text documents.",
    feature3Title: "Lossless",
    feature3Description:
      "Although the system adopts extreme deduplication and compression technology, the performance of read and write interfaces is almost lossless, and users can still enjoy high-speed data access experience.",
    feature4Title: "Secure",
    feature4Description:
      "The data is stored with encryption. The storage medium can be a cloud drive you consider secure, or any other secure and reliable S3-compatible storage.",
    iamLogin: "IAM Login",
    s3Login: "S3 Credentials",
    accessKeyId: "Access Key ID",
    secretAccessKey: "Secret Access Key",
    endpoint: "Endpoint",
    username: "Username",
    password: "Password",
    accessKeyPlaceholder: "Enter your Access Key ID",
    secretKeyPlaceholder: "Enter your Secret Access Key",
    endpointPlaceholder: "Enter the endpoint URL",
    usernamePlaceholder: "Enter your username",
    passwordPlaceholder: "Enter your password",
    rememberMe: "Remember me",
    forgotPassword: "Forgot password?",
    connecting: "Connecting...",
    connectToS3: "Connect to S3",
    loginSystem: "Login to System",
    pleaseEnterAccessKeyId: "Please enter Access Key ID",
    pleaseEnterSecretAccessKey: "Please enter Secret Access Key",
    pleaseEnterEndpoint: "Please enter endpoint",
    pleaseEnterUsername: "Please enter username",
    pleaseEnterPassword: "Please enter password",
    passwordTooShort: "Password must be at least 6 characters",
  },

  // 仪表盘页面翻译
  dashboard: {
    bucketCount: "Bucket Count",
    objectCount: "Total Objects",
    blockCount: "Block Count",
    chunkCount: "Chunk Count",
    originalSize: "Original Size",
    actualSize: "Real Size",
    compressionRatio: "Reduce Ratio",
    reuseStats: "Reuse Efficiency",
    saved: "Saved",
    reusedChunks: "Reused",
    pieces: "Chunks",
    total: "total",
    comparedToLastMonth: "last month",
  },

  // 访问密钥页面
  accessKey: {
    pageTitle: "Access Keys",
    createAccessKey: "Create Access Key",
    enterDate: "Select expiry date",
    createKey: "Create Key",
    accessKey: "Access Key",
    accessKeyId: "Access Key ID",
    secretAccessKey: "Secret Access Key",
    secretKey: "Secret Key",
    status: "Status",
    isExpired: "Expired",
    isEnabled: "Enabled",
    createdDate: "Created Date",
    expiryDate: "Expiry Date",
    deleteAccessKey: "Delete Access Key",
    noAccessKeys:
      "No access keys found, please click the button above to create",
    noKeys: "No access keys",
    clickCreateKey: "Click the button above to create one",
    createFirstKey: "Create First Key",
    expired: "Expired",
    notExpired: "Not Expired",
    enabled: "Enabled",
    disabled: "Disabled",
    editAccessKey: "Edit Access Key",
    enterAccessKey: "Enter access key",
    enterSecretKey: "Enter secret key",
    confirmDeleteKey:
      "Are you sure you want to delete this access key? This action cannot be undone.",
    keyDetails: "Key Details",
    saveSecretKeyWarning:
      "Please save the secret key properly, it will not be visible again after leaving this page!",
    iHaveSaved: "I Have Saved",
    searchPlaceholder: "Search access key ID...",
    enable: "Enable",
    disable: "Disable",
    confirmDeleteTitle: "Confirm Delete",
    confirmDeleteMessage:
      "Are you sure you want to delete this access key? This action cannot be undone.",
    createdSuccess: "Access key created successfully!",
    deletedSuccess: "Access key deleted successfully!",
    enableSuccess: "Access key enabled successfully!",
    disableSuccess: "Access key disabled successfully!",
    viewSecretAccessKey: "View Secret Key",
    secretAccessKeyWarning:
      "Please save the secret key properly, it will not be visible again after leaving this page!",
    secretAccessKeyCopied: "Secret key copied to clipboard!",
    confirmCreation: "Confirm Access Key Creation",
    confirmCreationMessage:
      "Please save the secret key properly after creation, it will not be visible again after leaving the page.",
  },

  // 存储桶页面
  bucket: {
    pageTitle: "Buckets",
    pageSubtitle: "Manage your buckets and objects",
    createBucket: "Create Bucket",
    createFirstBucket: "Create First Bucket",
    bucketName: "Bucket Name",
    location: "Location",
    createdAt: "Created At",
    creationDate: "Creation Date",
    viewDetails: "View Details",
    enterBucket: "Enter Bucket",
    bucketPolicy: "Bucket Policy",
    versioning: "Versioning",
    lifecycle: "Lifecycle",
    encryption: "Encryption",
    cors: "CORS",
    logging: "Logging",
    notification: "Notification",
    replication: "Replication",
    deleteBucket: "Delete Bucket",
    noBuckets: "No buckets found",
    noBucketsHint: "Click the button above to create your first bucket",
    totalBuckets: "Total {count} buckets",
    searchPlaceholder: "Search bucket name...",
    confirmDeleteTitle: "Confirm Delete",
    confirmDeleteMessage:
      'Are you sure you want to delete bucket "{name}"? All objects in the bucket will also be deleted.',
    createdSuccess: "Bucket created successfully!",
    loadingBuckets: "Loading buckets",
    pleaseWait: "Please wait...",
    error: "Error",
    retry: "Retry",
    deletedSuccess: "Bucket deleted successfully!",
    bucketNameInvalid:
      "Bucket name format is invalid, please use lowercase letters, numbers, and hyphens (cannot start or end with a hyphen)",
    bucketNameTooShort: "Bucket name must be at least 3 characters long",
    bucketNameTooLong: "Bucket name cannot exceed 63 characters",
    bucketNameExists: "This bucket name already exists",
    configure: "Configure",
    bucketSize: "Bucket Size",
    objectCount: "Object Count",
    dataSize: "Data Size",
    versionCount: "Version Count",
    publicAccess: "Public Access",
    private: "Private",
    publicRead: "Public Read",
    publicReadWrite: "Public Read Write",
    accessControlList: "Access Control List",
    crossOriginResourceSharing: "Cross-Origin Resource Sharing",
    eventNotificationConfiguration: "Event Notification Configuration",
    serverSideEncryption: "Server-Side Encryption",
    objectLock: "Object Lock",
    transferAcceleration: "Transfer Acceleration",
    staticWebsite: "Static Website",
    metrics: "Metrics",
    tags: "Tags",
    bucketNameCannotBeEmpty: "Bucket name cannot be empty",
    bucketNameLengthError: "Bucket name length must be between 3-63 characters",
    bucketNameFormatError: "Bucket name can only contain lowercase letters, numbers, and hyphens, and cannot start or end with a hyphen",
    bucketCreatedSuccessfully: "Bucket created successfully",
    alreadyOwnThisBucket: "You already own this bucket name",
    bucketNameAlreadyExists: "Bucket name already exists",
    bucketMetadataInitFailed: "Bucket metadata initialization failed",
    createBucketFailed: "Failed to create bucket",
    creating: "Creating...",
    enterBucketName: "Please enter bucket name",
    bucketNameValidation: "Bucket name must be between 3-63 characters long, can only contain lowercase letters, numbers and hyphens, and cannot start or end with a hyphen.",
    failedToListBuckets: "Failed to list buckets",
    noSuchBucket: "The bucket does not exist",
    bucketNotEmpty: "The bucket is not empty",
    accessDeniedToDelete: "You do not have permission to delete this bucket",
    deleteBucketFailed: "Failed to delete bucket",
  },
  // 用户管理页面
  user: {
    pageTitle: "User Management",
    createUser: "Create User",
    addUser: "Add User",
    userName: "User Name",
    displayName: "Display Name",
    email: "Email",
    status: "Status",
    enabled: "Enabled",
    disabled: "Disabled",
    createDate: "Create Date",
    creationTime: "Creation Time",
    lastLogin: "Last Login",
    editUser: "Edit User",
    deleteUser: "Delete User",
    delete: "Delete",
    noUsers: "No Users found, please click the button above to create",
    searchPlaceholder: "Search user name or email...",
    confirmDeleteTitle: "Confirm Delete",
    confirmDelete: "Confirm Delete",
    confirmDeleteMessage:
      'Are you sure you want to delete User "{name}"? This action will also delete all access keys for this account.',
    createdSuccess: "User created successfully!",
    updatedSuccess: "User updated successfully!",
    deletedSuccess: "User deleted successfully!",
    enableSuccess: "User enabled successfully!",
    disableSuccess: "User disabled successfully!",
    resetPassword: "Reset Password",
    confirmResetPasswordTitle: "Confirm Password Reset",
    confirmResetPasswordMessage:
      'Are you sure you want to reset the password for User "{name}"?',
    resetPasswordSuccess: "Password reset successfully!",
    assignPolicies: "Assign Policies",
    unassignPolicies: "Remove Policies",
    policyAssignedSuccess: "Policy assigned successfully!",
    policyUnassignedSuccess: "Policy removed successfully!",
    userDetails: "User Details",
    accessKeys: "Access Keys",
    assignedPolicies: "Assigned Policies",
    userActivity: "User Activity",
    userActivityLoading: "Loading user activity...",
    userActivityNoData: "No user activity records found",
    associatedRole: "Associated Role",
    associatedPolicy: "Associated Policy",
    associatedGroup: "Associated Group",
    noAssociatedRoles: "No associated roles",
    noAssociatedPolicies: "No associated policies",
    noAssociatedGroups: "No associated groups",
    noAvailableRoles: "No available roles",
    noAvailablePolicies: "No available policies",
    enableUser: "Enable User",
    clickAddUser: "Please click the button above to add",
    addNewUser: "Add New User",
    password: "Password",
    edit: "Edit",
    operation: "Actions",
    cancel: "Cancel",
    update: "Update",
    create: "Create",
  },
  // 用户组管理页面
  group: {
    pageTitle: "User Group Management",
    createGroup: "Create User Group",
    addUserGroup: "Add User Group",
    groupName: "Group Name",
    name: "Name",
    description: "Description",
    userCount: "User Count",
    policyCount: "Policy Count",
    createDate: "Create Date",
    creationTime: "Creation Time",
    editGroup: "Edit User Group",
    editUserGroup: "Edit User Group",
    deleteGroup: "Delete User Group",
    delete: "Delete",
    noGroups: "No user groups found, please click the button above to create",
    noUserGroups: "No User Groups",
    searchPlaceholder: "Search group name...",
    confirmDeleteTitle: "Confirm Delete",
    confirmDelete: "Confirm Delete",
    confirmDeleteMessage:
      'Are you sure you want to delete user group "{name}"?',
    createdSuccess: "User group created successfully!",
    updatedSuccess: "User group updated successfully!",
    deletedSuccess: "User group deleted successfully!",
    manageUsers: "Manage Users",
    managePolicies: "Manage Policies",
    addUsersToGroup: "Add Users to Group",
    removeUsersFromGroup: "Remove Users from Group",
    addPoliciesToGroup: "Add Policies to Group",
    removePoliciesFromGroup: "Remove Policies from Group",
    groupDetails: "User Group Details",
    groupUsers: "Group Members",
    groupPolicies: "Group Policies",
    userAddedSuccess: "User added successfully!",
    userRemovedSuccess: "User removed successfully!",
    policyAddedSuccess: "Policy added successfully!",
    policyRemovedSuccess: "Policy removed successfully!",
    clickAddUserGroup: "Please click the button above to add",
    addNewUserGroup: "Add New User Group",
    pleaseEnterGroupName: "Please enter group name",
    pleaseEnterGroupDescription: "Please enter group description",
    cancel: "Cancel",
    update: "Update",
    create: "Create",
    edit: "Edit",
    operation: "Actions",
    noDescription: "No Description",
  },
  // 角色管理页面
  role: {
    pageTitle: "Role Management",
    createRole: "Create Role",
    addRole: "Add Role",
    roleName: "Role Name",
    name: "Name",
    description: "Description",
    assumeRolePolicy: "Trust Policy",
    policyCount: "Policy Count",
    createDate: "Create Date",
    editRole: "Edit Role",
    deleteRole: "Delete Role",
    noRoles: "No Roles",
    searchPlaceholder: "Search role name...",
    confirmDeleteTitle: "Confirm Delete",
    confirmDeleteMessage: 'Are you sure you want to delete role "{name}"?',
    confirmDeleteDescription: "This action cannot be undone.",
    confirmDeletePolicyWarning: 'Note: This role is associated with {count} policies, which will be removed after deletion.',
    createdSuccess: "Role created successfully!",
    updatedSuccess: "Role updated successfully!",
    deletedSuccess: "Role deleted successfully!",
    managePolicies: "Manage Policies",
    addPoliciesToRole: "Add Policies to Role",
    removePoliciesFromRole: "Remove Policies from Role",
    roleDetails: "Role Details",
    rolePolicies: "Role Policies",
    policyAddedSuccess: "Policy added successfully!",
    policyRemovedSuccess: "Policy removed successfully!",
    trustPolicy: "Trust Policy",
    trustEntities: "Trust Entities",
    associatedPolicies: "Associated Policies",
    associatedUsers: "Associated Users",
    creationTime: "Creation Time",
    noAssociatedPolicies: "No associated policies",
    noDescription: "No Description",
    operation: "Actions",
    noDescription: "No Description",
    view: "View",
    edit: "Edit",
    delete: "Delete",
    clickAddRole: "Please click the button above to add",
    addNewRole: "Add New Role",
    pleaseEnterRoleName: "Please enter role name",
    pleaseEnterRoleDescription: "Please enter role description",
    cancel: "Cancel",
    save: "Save",
    create: "Create",
    policyAssociation: "Associated Policies",
    noAvailablePolicies: "No available policies, please create policies first",
    roleDetails: "Role Details",
  },
  // 策略管理页面
  policy: {
    pageTitle: "Policy Management",
    createPolicy: "Create Policy",
    addPolicy: "Add Policy",
    policyName: "Policy Name",
    name: "Name",
    description: "Description",
    policyType: "Policy Type",
    createDate: "Create Date",
    creationTime: "Creation Time",
    attachedTo: "Attached To",
    editPolicy: "Edit Policy",
    deletePolicy: "Delete Policy",
    delete: "Delete",
    noPolicies: "No Policies",
    searchPlaceholder: "Search policy name or description...",
    confirmDeleteTitle: "Confirm Delete",
    confirmDelete: "Confirm Delete",
    confirmDeleteMessage:
      'Are you sure you want to delete policy "{name}"? This action will also remove the policy from all attached users, groups, or roles.',
    createdSuccess: "Policy created successfully!",
    updatedSuccess: "Policy updated successfully!",
    deletedSuccess: "Policy deleted successfully!",
    policyDetails: "Policy Details",
    policyDocument: "Policy Document",
    policyVersion: "Policy Version",
    policySummary: "Policy Summary",
    service: "Service",
    actions: "Actions",
    operation: "Actions",
    resources: "Resources",
    conditions: "Conditions",
    policyEditor: "Policy Editor",
    jsonEditor: "JSON Editor",
    visualEditor: "Visual Editor",
    importPolicy: "Import Policy",
    exportPolicy: "Export Policy",
    defaultPolicyVersion: "Default Version",
    createPolicyVersion: "Create Version",
    setAsDefaultVersion: "Set as Default Version",
    deletePolicyVersion: "Delete Version",
    confirmDeleteVersionTitle: "Confirm Delete Version",
    confirmDeleteVersionMessage:
      "Are you sure you want to delete this policy version?",
    clickAddPolicy: "Please click the button above to add",
    addNewPolicy: "Add New Policy",
    pleaseEnterPolicyName: "Please enter policy name",
    pleaseEnterPolicyDescription: "Please enter policy description",
    validateJSON: "Validate JSON",
    formatJSON: "Format JSON",
    jsonFormatError: "JSON format error",
    formatCorrect: "Format correct",
    formatSuccess: "JSON formatted successfully",
    useStandardS3Format: "Please use standard S3 policy format",
    cancel: "Cancel",
    update: "Update",
    create: "Create",
    view: "View",
    edit: "Edit",
    noDescription: "No Description",
    associatedUsers: "Associated Users",
    associatedGroups: "Associated Groups",
    noAssociatedUsers: "No associated users",
    noAssociatedGroups: "No associated groups",
    close: "Close",
  },
  // 配额管理页面
  quota: {
    pageTitle: "Quota Management",
    pageDescription: "Manage storage and object quotas for accounts",
    addQuota: "Add Quota",
    cancelEditing: "Cancel Editing",
    noQuotas: "No quota configurations found",
    accountId: "Account ID",
    storageLimit: "Storage Limit",
    objectLimit: "Object Limit",
    status: "Status",
    operation: "Actions",
    enabled: "Enabled",
    disabled: "Disabled",
    edit: "Edit",
    delete: "Delete",
    accountInfo: "Account Information",
    enterAccountId: "Enter account ID",
    accountIdDesc: "The unique identifier for the account",
    quotaConfig: "Quota Configuration",
    zeroMeansUnlimited: "0 means unlimited",
    statusConfig: "Status Configuration",
    enableQuota: "Enable quota",
    updateConfig: "Update Configuration",
    saveConfig: "Save Configuration",
    cancel: "Cancel",
    confirm: "Confirm",
    confirmDeleteTitle: "Confirm Delete",
    confirmDeleteMessage:
      "Are you sure you want to delete this quota configuration?",
    deleteSuccess: "Quota configuration has been successfully deleted!",
    updateSuccess: "Quota configuration has been updated!",
    addSuccess: "Quota configuration has been added!",
    storageQuota: "Storage Quota",
    objectCountQuota: "Object Count Quota",
    bucketCountQuota: "Bucket Count Quota",
    accessKeyCountQuota: "Access Key Count Quota",
    userCountQuota: "User Count Quota",
    groupCountQuota: "Group Count Quota",
    roleCountQuota: "Role Count Quota",
    policyCountQuota: "Policy Count Quota",
    unlimited: "Unlimited",
    currentUsage: "Current Usage",
    usagePercentage: "Usage Percentage",
    setQuota: "Set Quota",
    saveQuota: "Save Quota",
    confirmSetQuotaTitle: "Confirm Set Quota",
    confirmSetQuotaMessage: "Are you sure you want to set these quota limits?",
    setSuccess: "Quota set successfully!",
    setFailed: "Quota set failed!",
    quotaExceeded: "Quota Exceeded",
    quotaWarning: "Quota Warning",
    quotaNormal: "Quota Normal",
    viewDetails: "View Details",
    quotaType: "Quota Type",
    quotaLimit: "Quota Limit",
    unit: "Unit",
    bytes: "Bytes",
    gigabytes: "GB",
    terabytes: "TB",
    count: "Count",
  },
  // 事件类型
  eventType: {
    login: "Login",
    bucket: "Bucket",
    object: "Object",
    user: "User Management",
    policy: "Policy Management",
    allTypes: "All Types",
    loginEvents: "Login Events",
    bucketOperations: "Bucket Operations",
    objectOperations: "Object Operations",
    userManagement: "User Management",
    policyManagement: "Policy Management",
  },

  // 事件模板
  eventTemplate: {
    loginSuccess: "{username} successfully logged in",
    loginFailedPassword: "{username} login failed (incorrect password)",
    loginFailedLocked: "{username} login failed (account locked)",
    bucketCreated: '{username} created bucket "{resource}"',
    bucketDeleted: '{username} deleted bucket "{resource}"',
    bucketListed: "{username} listed bucket list",
    bucketAclModified: '{username} modified ACL of bucket "{resource}"',
    objectUploaded:
      '{username} uploaded object "{resource}" to bucket "{bucket}"',
    objectDownloaded:
      '{username} downloaded object "{resource}" from bucket "{bucket}"',
    objectDeleted:
      '{username} deleted object "{resource}" from bucket "{bucket}"',
    objectsListed: '{username} listed objects in bucket "{bucket}"',
    userCreated: '{username} created user "{resource}"',
    userPermissionModified:
      '{username} modified permissions of user "{resource}"',
    userDeleted: '{username} deleted user "{resource}"',
    userPasswordReset: '{username} reset password of user "{resource}"',
    policyCreated: '{username} created policy "{resource}"',
    policyModified: '{username} modified policy "{resource}"',
    policyDeleted: '{username} deleted policy "{resource}"',
    policyAssigned: '{username} assigned policy "{resource}" to user "{user}"',
  },

  // 高级功能页面
  advancedFeatures: {
      migration: "Migration",
      migrationDescription: "Function to migrate data from one storage location to another.",
      defragment: "Defragment",
      defragmentDescription: "Optimize storage fragments to improve system performance and space utilization.",
      snapshot: "SnapShot",
      snapshotDescription: "SnapShot of data and storage structures.",
      analysis: "Analysis",
      analysisDescription: "Function to analyze data errors in storage and recover.",
      debugTool: "Debug Tool",
      debugToolDescription: "Advanced tools for system diagnosis and troubleshooting."
  },

  // 事件日志页面
  event: {
    pageTitle: "Event Log",
    eventType: "Event Type",
    allTypes: "All Types",
    loginEvents: "Login Events",
    bucketOperations: "Bucket Operations",
    objectOperations: "Object Operations",
    userManagement: "User Management",
    policyManagement: "Policy Management",
    source: "Source",
    severity: "Severity",
    description: "Description",
    noEvents: "No event logs found",
    systemWillRecord: "System will automatically record all events",
    searchPlaceholder:
      "Search event description, source or related resources...",
    time: "Time",
    username: "Username",
    ipAddress: "IP Address",
    status: "Status",
    operation: "Actions",
    detail: "Detail",
    success: "Success",
    failed: "Failed",
    critical: "Critical",
    error: "Error",
    warning: "Warning",
    info: "Info",
    debug: "Debug",
    eventsPerPage: "Events per Page",
    totalRecords: "Total {total} records",
    page10: "10 per page",
    page20: "20 per page",
    page50: "50 per page",
    eventDetails: "Event Details",
    close: "Close",
    detailedInfo: "Detailed Info",
    detailInfo: "Detailed Info",
    startTime: "Start Time",
    endTime: "End Time",
    today: "Today",
    yesterday: "Yesterday",
    last7Days: "Last 7 Days",
    last30Days: "Last 30 Days",
  },

  // 审计类型名称
  auditTypes: {
    all: "All Types",
    "s3:GetObject": "Get Object",
    "s3:PutObject": "Put Object",
    "s3:DeleteObject": "Delete Object",
    "s3:GetObjectAcl": "Get Object ACL",
    "s3:PutObjectAcl": "Put Object ACL",
    "s3:GetObjectTagging": "Get Object Tagging",
    "s3:PutObjectTagging": "Put Object Tagging",
    "s3:GetObjectVersion": "Get Object Version",
    "s3:DeleteObjectVersion": "Delete Object Version",
    "s3:GetObjectAttributes": "Get Object Attributes",
    "s3:CreateBucket": "Create Bucket",
    "s3:DeleteBucket": "Delete Bucket",
    "s3:ListBucket": "List Bucket",
    "s3:ListBucketVersions": "List Bucket Versions",
    "s3:GetBucketLocation": "Get Bucket Location",
    "s3:GetBucketAcl": "Get Bucket ACL",
    "s3:PutBucketAcl": "Put Bucket ACL",
    "s3:GetBucketPolicy": "Get Bucket Policy",
    "s3:PutBucketPolicy": "Put Bucket Policy",
    "s3:DeleteBucketPolicy": "Delete Bucket Policy",
    "s3:PutBucketVersioning": "Put Bucket Versioning",
    "s3:GetBucketVersioning": "Get Bucket Versioning",
    "s3:PutBucketCORS": "Put Bucket CORS",
    "s3:GetBucketCORS": "Get Bucket CORS",
    "s3:PutBucketLogging": "Put Bucket Logging",
    "s3:GetBucketLogging": "Get Bucket Logging",
    "s3:PutBucketNotification": "Put Bucket Notification",
    "s3:GetBucketNotification": "Get Bucket Notification",
    "s3:PutBucketReplication": "Put Bucket Replication",
    "s3:GetBucketReplication": "Get Bucket Replication",
    "s3:PutBucketEncryption": "Put Bucket Encryption",
    "s3:GetBucketEncryption": "Get Bucket Encryption",
    "s3:PutBucketLifecycleConfiguration": "Put Bucket Lifecycle",
    "s3:GetBucketLifecycleConfiguration": "Get Bucket Lifecycle",
    "s3:DeleteBucketLifecycle": "Delete Bucket Lifecycle",
    "iam:CreateUser": "Create IAM User",
    "iam:DeleteUser": "Delete IAM User",
    "iam:UpdateUser": "Update IAM User",
    "iam:CreateRole": "Create IAM Role",
    "iam:DeleteRole": "Delete IAM Role",
    "iam:UpdateRole": "Update IAM Role",
    "iam:AttachUserPolicy": "Attach User Policy",
    "iam:DetachUserPolicy": "Detach User Policy",
    "iam:AttachRolePolicy": "Attach Role Policy",
    "iam:DetachRolePolicy": "Detach Role Policy",
    "iam:CreateAccessKey": "Create Access Key",
    "iam:DeleteAccessKey": "Delete Access Key",
    "iam:UpdateAccessKey": "Update Access Key",
    "iam:ListAccessKeys": "List Access Keys",
    "iam:GetUser": "Get IAM User",
    "iam:ListUsers": "List IAM Users",
    "iam:GetRole": "Get IAM Role",
    "iam:ListRoles": "List IAM Roles",
    "iam:GetPolicy": "Get IAM Policy",
    "iam:ListPolicies": "List IAM Policies",
    "iam:CreateGroup": "Create IAM Group",
    "iam:DeleteGroup": "Delete IAM Group",
    "iam:UpdateGroup": "Update IAM Group",
    "iam:AddUserToGroup": "Add User to Group",
    "iam:RemoveUserFromGroup": "Remove User from Group",
    "iam:ListGroups": "List IAM Groups",
    "iam:ListGroupUsers": "List Group Users",
    "iam:ListAttachedUserPolicies": "List Attached User Policies",
    "iam:ListAttachedRolePolicies": "List Attached Role Policies",
  },

  // 审计页面
  audit: {
    pageTitle: "Audit Records",
    searchPlaceholder: "Search audit description, target or actor...",
    startTime: "Start Time:",
    endTime: "End Time:",
    riskLevel: "Risk Level",
    low: "Low",
    medium: "Medium",
    high: "High",
    noAuditRecords: "No audit records found",
    systemAutomaticallyRecords:
      "System will automatically record all audit events",
    // 表格列标题
    time: "Time",
    auditType: "Audit Type",
    actor: "Actor",
    target: "Target",
    status: "Status",
    operation: "Actions",
    // 审计详情页面
    detailsTitle: "Audit Details",
    apiOperation: "API Operation",
    operationDescription: "Operation Description",
    operator: "Operator",
    sourceIp: "Source IP",
    impactedResource: "Impacted Resource",
    requestStatus: "Request Status",
    errorMessage: "Error Message",
    errorCode: "Error Code",
    errorDescription: "Error Description",
    detailedDescription: "Detailed Description",
    awsContextInfo: "AWS Context Info",
    generateReport: "Generate Report",
  },

  // 数据切片配置页面
  chunk: {
    pageTitle: "Data Chunk Configuration",
    configPlaceholder: "Configure data chunk parameters...",
    basicConfiguration: "Basic Configuration",
    chunkLength: "Chunk Length",
    recommendedValue: "Recommended value is 16-64MB",
    advancedSettings: "Advanced Settings",
    useFixedLengthChunking: "Use Fixed Length Chunking",
    enableDataEncryption: "Enable Data Encryption",
    enableDataCompression: "Enable Data Compression",
    saveConfiguration: "Save Configuration",
    saveSuccess: "Configuration saved successfully!",
  },
  // 品牌相关
  brand: {
    name: "Boulder Storage",
    admin: "Admin",
    regularUser: "Regular User",
  },
  // 存储点页面
  endpoint: {
    pageTitle: "Endpoint Configuration",
    pageDescription:
      "Configure different types of storage endpoints, supporting disk storage and S3 compatible storage",
    addStoragePoint: "Add Storage Point",
    id: "ID",
    type: "Type",
    class: "Class",
    configuration: "Configure",
    operation: "Actions",
    noStoragePoints:
      "No storage point configurations found, please click the button above to add",
    diskStorage: "Disk Storage",
    s3CompatibleStorage: "S3 Compatible Storage",
    edit: "Edit",
    delete: "Delete",
    storagePointClass: "Storage Point Class",
    storagePointType: "Storage Point Type",
    diskConfiguration: "Disk Configuration",
    s3Configuration: "S3 Configuration",
    diskStorageDescription:
      "Disk storage, such as local disks, NAS, USB drives, etc.",
    s3StorageDescription:
      "S3-compatible storage, such as AWS S3, MinIO, Alibaba Cloud OSS, Tencent Cloud COS, etc.",
    storagePointId: "Storage Point ID",
    absolutePath: "Absolute Path",
    pathExample: "e.g.: D:\\storage or /mnt/storage",
    pathPermissionNotice:
      "Ensure the application has write access to this path",
    accessKey: "Access Key",
    secretKey: "Secret Key",
    region: "Region",
    endpointLabel: "Endpoint",
    bucket: "Bucket",
    usePathStyle: "Use Path Style",
    enterS3AccessKey: "Enter S3 Access Key",
    enterS3SecretKey: "Enter S3 Secret Key",
    regionExample: "e.g.: us-east-1",
    enterS3Endpoint: "Enter S3 Endpoint",
    enterBucketName: "Enter Bucket Name",
    uniqueIdentifier: "Unique identifier for the storage point",
    idDescription: "Once created, the ID cannot be changed",
    testConfiguration: "Test Configuration",
    saveConfiguration: "Save Configuration",
    cancelEditing: "Cancel Editing",
    cancel: "Cancel",
    confirmDeleteTitle: "Confirm Delete",
    confirmDeleteMessage:
      "Are you sure you want to delete this storage point configuration? This action may affect related storage functions.",
    confirmDelete: "Confirm Delete",
    enterDiskPath: "Please enter disk absolute path",
    enterValidWindowsPath: "Please enter a valid Windows absolute path",
    enterAccessKeys: "Please enter Access Key and Secret Key",
    enterRegionOrEndpoint: "Please enter Region or Endpoint",
    enterCompleteS3Config: "Please complete all S3 configuration information",
    enterStoragePointId: "Please enter storage point ID",
    idExists: "Storage point ID already exists, please use another ID",
    testSuccess: "Configuration test successful!",
    saveSuccess: "Storage point configuration saved successfully!",
    updateSuccess: "Storage point configuration updated successfully!",
    deleteSuccess: "Storage point has been successfully deleted!",
    loadFailed: "Failed to load storage point list",
    storageType: {
      standard: {
        label: "Standard Storage",
        description: "High performance, low latency storage type",
      },
      lowfreq: {
        label: "Low Frequency Storage",
        description: "Lower cost, suitable for infrequently accessed data",
      },
      archive: {
        label: "Archive Storage",
        description: "Lowest cost, suitable for long-term archived data",
      },
    },
  },
  
  // Browser page
  browser: {
    uploadFile: "Upload File",
    createFolder: "Create Folder",
    createNewFolder: "Create New Folder",
    folderName: "Folder Name",
    enterFolderName: "Please enter folder name",
    folderNameRequired: "Please enter folder name",
    invalidFolderName: "Folder name cannot contain slashes",
    folderAlreadyExists: "Folder already exists",
    accessDenied: "No permission to create folder",
    createFolderFailed: "Failed to create folder",
    createFolderHint: "Will create new folder in {path}",
    bucketEmpty: "Bucket Empty",
    folderEmpty: "Folder Empty",
    emptyBucketHint: "There are no objects in the current bucket",
    emptyFolderHint: "There are no objects in the current folder",
    uploadFirstFile: "Upload your first file",
    fileDetails: "File Details",
    selectedObjectsCount: "Selected {count} objects",
    selectedObjectsHint: "Please select objects to operate",
    objectInfo: "Object Info",
    chunkCount: "Chunk Count",
    storagePath: "Storage Path",
    etag: "ETag",
    bucketNotFound: "Bucket not found",
    loadingObjects: "Loading objects...",
    failedToLoadObjects: "Failed to load objects",
    downloadFailed: "Failed to download objects"
  },
};

export default en;
